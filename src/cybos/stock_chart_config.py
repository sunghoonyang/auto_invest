from collections import OrderedDict

class StockChartConfig(object):
    _PER_EPS_INPUT_VAL_PARAMS = {
        '0': {'code': 0, 'name': "종목코드(string)"},
        '1': {'code': 1, 'name': "시간( ulong) - hhmm"},
        '2': {'code': 2, 'name': "대비부호(char) > '1': 상한, '2': 상승, '3': 보합, '4': 하한, '5': 하락", 'is_char': True},
        '3': {'code': 3, 'name': "전일대비(long or float) - 주의) 반드시 대비부호(2)와 같이 요청을 하여야 함"},
        '4': {'code': 4, 'name': "현재가(long or float)"},
        '5': {'code': 5, 'name': "시가(long or float)"},
        '6': {'code': 6, 'name': "고가(long or float)"},
        '7': {'code': 7, 'name': "저가(long or float)"},
        '8': {'code': 8, 'name': "매도호가(long or float)"},
        '9': {'code': 9, 'name': "매수호가(long or float)"},
        '10': {'code': 10, 'name': "거래량( ulong)"},
        '11': {'code': 11, 'name': "거래대금(ulonglong) - 단위:원"},
        '12': {'code': 12, 'name': "장구분(char or empty) > '0': 장전, '1': 동시호가, '2': 장중", 'is_char': True, 'nullable': True},
        '13': {'code': 13, 'name': "총매도호가잔량(ulong)"},
        '14': {'code': 14, 'name': "총매수호가잔량(ulong)"},
        '15': {'code': 15, 'name': "최우선매도호가잔량(ulong)"},
        '16': {'code': 16, 'name': "최우선매수호가잔량(ulong)"},
        '17': {'code': 17, 'name': "종목명(string)"},
        '20': {'code': 20, 'name': "총상장주식수(ulonglong) - 단위:주"},
        '21': {'code': 21, 'name': "외국인보유비율(float)"},
        '22': {'code': 22, 'name': "전일거래량(ulong)"},
        '23': {'code': 23, 'name': "전일종가(long or float)"},
        '24': {'code': 24, 'name': "체결강도(float)"},
        '25': {'code': 25, 'name': "체결구분(char or empty) > '1': 매수체결, '2': 매도체결,", 'is_char': True, 'nullable': True},
        '27': {'code': 27, 'name': "미결제약정(long)"},
        '28': {'code': 28, 'name': "예상체결가(long)"},
        '29': {'code': 29, 'name': "예상체결가대비(long) - 주의) 반드시 예샹체결가대비부호(30)와 같이 요청을 하여야 함"},
        '30': {'code': 30, 'name': "예상체결가대비부호(char or empty) > '1': 상한, '2': 상승, '3': 보합, '4', 하한: '5', 하락", 'is_char': True, 'nullable': True},
        '31': {'code': 31, 'name': "예상체결수량(ulong)"},
        '32': {'code': 32, 'name': "19일종가합(long or float)"},
        '33': {'code': 33, 'name': "상한가(long or float)"},
        '34': {'code': 34, 'name': "하한가(long or float)"},
        '35': {'code': 35, 'name': "매매수량단위(ushort)"},
        '36': {'code': 36, 'name': "시간외단일대비부호(char or empty) > '+': 양수, '-': 음수", 'is_char': True, 'nullable': True},
        '37': {'code': 37, 'name': "시간외단일전일대비(long) - 주의) 반드시 시간외단일대비부호(36)와 같이 요청을 하여야 함"},
        '38': {'code': 38, 'name': "시간외단일현재가(long)"},
        '39': {'code': 39, 'name': "시간외단일시가(long)"},
        '40': {'code': 40, 'name': "시간외단일고가(long)"},
        '41': {'code': 41, 'name': "시간외단일저가(long)"},
        '42': {'code': 42, 'name': "시간외단일매도호가(long)"},
        '43': {'code': 43, 'name': "시간외단일매수호가(long)"},
        '44': {'code': 44, 'name': "시간외단일거래량(ulong)"},
        '45': {'code': 45, 'name': "시간외단일거래대금(ulonglong) - 단위:원"},
        '46': {'code': 46, 'name': "시간외단일총매도호가잔량(ulong)"},
        '47': {'code': 47, 'name': "시간외단일총매수호가잔량(ulong)"},
        '48': {'code': 48, 'name': "시간외단일최우선매도호가잔량(ulong)"},
        '49': {'code': 49, 'name': "시간외단일최우선매수호가잔량(ulong)"},
        '50': {'code': 50, 'name': "시간외단일체결강도(float)"},
        '51': {'code': 51, 'name': "시간외단일체결구분(char or empty) > '1': 매수체결, '2': 매도체결,", 'is_char': True, 'nullable': True},
        '53': {'code': 53, 'name': "시간외단일예상/실체결구분(char) > '1': 예상체결, '2': 실체결,", 'is_char': True},
        '54': {'code': 54, 'name': "시간외단일예상체결가(long)"},
        '55': {'code': 55, 'name': "시간외단일예상체결전일대비(long) - 주의) 반드시 시간외예상체결대비부호(56)와 같이 요청을 하여야 함"},
        '56': {'code': 56, 'name': "시간외단일예상체결대비부호(char or empty) > '1': 상한, '2': 상승, '3': 보합, '4': 하락, '5': 하한", 'is_char': True, 'nullable': True},
        '57': {'code': 57, 'name': "시간외단일예상체결수량(ulong)"},
        '59': {'code': 59, 'name': "시간외단일기준가(long)"},
        '60': {'code': 60, 'name': "시간외단일상한가(long)"},
        '61': {'code': 61, 'name': "시간외단일하한가(long)"},
        '62': {'code': 62, 'name': "외국인순매매(long)"},
        '63': {'code': 63, 'name': "52주최고가(long or float)"},
        '64': {'code': 64, 'name': "52주최저가(long or float)"},
        '65': {'code': 65, 'name': "연중주최저가(long or float)"},
        '66': {'code': 66, 'name': "연중최저가(long or float)"},
        '67': {'code': 67, 'name': "PER(float)"},
        '68': {'code': 68, 'name': "시간외매수잔량(ulong)"},
        '69': {'code': 69, 'name': "시간외매도잔량(ulong)"},
        '70': {'code': 70, 'name': "EPS(ulong)"},
        '71': {'code': 71, 'name': "자본금(ulonglong)- 단위:백만"},
        '72': {'code': 72, 'name': "액면가(ushort)"},
        '73': {'code': 73, 'name': "배당률(float)"},
        '74': {'code': 74, 'name': "배당수익률(float)"},
        '75': {'code': 75, 'name': "부채비율(float)"},
        '76': {'code': 76, 'name': "유보율(float)"},
        '77': {'code': 77, 'name': "자기자본이익률(float)"},
        '78': {'code': 78, 'name': "매출액증가율(float)"},
        '79': {'code': 79, 'name': "경상이익증가율(float)"},
        '80': {'code': 80, 'name': "순이익증가율(float)"},
        '81': {'code': 81, 'name': "투자심리(float)"},
        '82': {'code': 82, 'name': " VR(float)"},
        '83': {'code': 83, 'name': "5일 회전율(float)"},
        '84': {'code': 84, 'name': "4일 종가합(ulong)"},
        '85': {'code': 85, 'name': "9일 종가합(ulong)"},
        '86': {'code': 86, 'name': "매출액(ulonglong) - 단위: 백만"},
        '87': {'code': 87, 'name': "경상이익(ulonglong) - 단위:원"},
        '88': {'code': 88, 'name': "당기순이익(ulonglog) - 단위:원"},
        '89': {'code': 89, 'name': "BPS(ulong) - 주당순자산"},
        '90': {'code': 90, 'name': "영업이익증가율(float)"},
        '91': {'code': 91, 'name': "영업이익(ulonglong) - 단위:원"},
        '92': {'code': 92, 'name': "매출액영업이익률(float)"},
        '93': {'code': 93, 'name': "매출액경상이익률(float)"},
        '94': {'code': 94, 'name': "이자보상비율(float)"},
        '95': {'code': 95, 'name': "결산년월(ulong) - yyyymm"},
        '96': {'code': 96, 'name': "분기BPS(ulong) - 분기주당순자산"},
        '97': {'code': 97, 'name': "분기매출액증가율(float)"},
        '98': {'code': 98, 'name': "분기영업이액증가율(float)"},
        '99': {'code': 99, 'name': "분기경상이익증가율(float)"},
        '100': {'code': 100, 'name': "분기순이익증가율(float)"},
        '101': {'code': 101, 'name': "분기매출액(ulonglong) - 단위:원"},
        '102': {'code': 102, 'name': "분기영업이익(ulonglong) - 단위:원"},
        '103': {'code': 103, 'name': "분기경상이익(ulonglong) - 단위:원"},
        '104': {'code': 104, 'name': "분기당기순이익(ulonglong) - 단위:원"},
        '105': {'code': 105, 'name': "분개매출액영업이익률(float)"},
        '106': {'code': 106, 'name': "분기매출액경상이익률(float)"},
        '107': {'code': 107, 'name': "분기ROE(float) - 자기자본순이익률"},
        '108': {'code': 108, 'name': "분기이자보상비율(float)"},
        '109': {'code': 109, 'name': "분기유보율(float)"},
        '110': {'code': 110, 'name': "분기부채비율(float)"},
        '111': {'code': 111, 'name': "최근분기년월(ulong) - yyyymm"},
        '112': {'code': 112, 'name': "BASIS(float)"},
        '113': {'code': 113, 'name': "현지날짜(ulong) - yyyymmdd"},
        '114': {'code': 114, 'name': "국가명(string) - 해외지수 국가명"},
        '115': {'code': 115, 'name': "ELW이론가(ulong)"},
        '116': {'code': 116, 'name': "프로그램순매수(long)"},
        '117': {'code': 117, 'name': "당일외국인순매수잠정구분(char) > '\0'(0): 해당없음, '1': 확정, '2': 잠정", 'is_char': True},
        '118': {'code': 118, 'name': "당일외국인순매수(long)"},
        '119': {'code': 119, 'name': "당일기관순매수잠정구분(char) > '\0'(0): 해당없음, '1': 확정, '2': 잠정", 'is_char': True},
        '120': {'code': 120, 'name': "당일기관순매수(long)"},
        '121': {'code': 121, 'name': "전일외국인순매수(long)"},
        '122': {'code': 122, 'name': "전일기관순매수(long)"},
        '123': {'code': 123, 'name': "SPS(ulong)"},
        '124': {'code': 124, 'name': "CFPS(ulong)"},
        '125': {'code': 125, 'name': "EBITDA(ulong)"},
        '126': {'code': 126, 'name': "신용잔고율(float)"},
        '127': {'code': 127, 'name': "공매도수량(ulong)"},
        '128': {'code': 128, 'name': "공매도일자(ulong)"},
        '129': {'code': 129, 'name': "ELW e-기어링(float)"},
        '130': {'code': 130, 'name': "ELW LP보유양(ulong)"},
        '131': {'code': 131, 'name': "ELW LP보유율(float)"},
        '132': {'code': 132, 'name': "ELW LP Moneyness(float)"},
        '133': {'code': 133, 'name': "ELW LP Moneyness구분(char) > '1': ITM, '2': OTM, ' ': 해당없음", 'is_char': True},
        '134': {'code': 134, 'name': "ELW 감마(float)"},
        '135': {'code': 135, 'name': "ELW 기어링(float)"},
        '136': {'code': 136, 'name': "ELW 내재변동성(float)"},
        '137': {'code': 137, 'name': "ELW 델타(float)"},
        '138': {'code': 138, 'name': "ELW 발행수량(ulong)"},
        '139': {'code': 139, 'name': "ELW 베가(float)"},
        '140': {'code': 140, 'name': "ELW 세타(float)"},
        '141': {'code': 141, 'name': "ELW 손익분기율(float)"},
        '142': {'code': 142, 'name': "ELW 역사적변동성(float)"},
        '143': {'code': 143, 'name': "ELW 자본지지점(float)"},
        '144': {'code': 144, 'name': "ELW 패리티(float)"},
        '145': {'code': 145, 'name': "ELW 프리미엄(float)"},
        '146': {'code': 146, 'name': "ELW 베리어(float)x"},
    }
    _INPUT_VAL_PARAMS = {
        '0': {'code': 0, 'name': "종목코드(string): 주식(A003540), 업종(U001), ELW(J517016)의 종목코드"},
        '1': {'code': 1, 'name': "요청구분(char):", 'is_char': True},
        '2': {'code': 2, 'name': "요청종료일(ulong): YYYYMMDD형식으로 데이터의 마지막(가장 최근) 날짜 Default(0) - 최근 거래날짜"},
        '3': {'code': 3, 'name': "요청시작일(ulong): YYYYMMDD형식으로 데이터의 시작(가장 오래된) 날짜"},
        '4': {'code': 4, 'name': "요청개수(ulong): 요청할 데이터의 개수"},
        '5': {'is_char': False},
        '6': {'code': 6, 'name': "차트구분(char) > 'D': 일, 'W': 주, 'M': 월, 'm': 분, 'T': 틱", 'is_char': True},
        '7': {'code': 7, 'name': "주기(ushort): Default-1"},
        '8': {'code': 8, 'name': "갭보정여부(char) > '0': 갭무보정 [Default], '1':갭보정", 'is_char': True},
        '9': {'code': 9, 'name': "수정주가(char) > '0': 무수정주가 [Default], '1': 수정주가", 'is_char': True},
        '10': {'code': 10, 'name': "거래량구분(char) > '1': 시간외거래량 모두 포함[Default], '2': 장종료시간외거래량만 포함, '3': 시간외거래량 모두 제외, '4': 장전시간외거래량만 포함", 'is_char': True},
    }
    _HEADER_VALUE_PARAMS = {
        '0': {'code': 0, 'name': "종목코드(string)"},
        '1': {'code': 1, 'name': "필드개수(short)"},
        '2': {'code': 2, 'name': "필드명의 배열(string array): 필드는 요청한 필드 값의 오름차순으로 정렬되어 있음"},
        '3': {'code': 3, 'name': "수신개수(long)"},
        '4': {'code': 4, 'name': "마지막봉틱수(ushort)"},
        '5': {'code': 5, 'name': "최근거래일(ulong): YYYYMMDD"},
        '6': {'code': 6, 'name': "전일종가(ulong or float)"},
        '7': {'code': 7, 'name': "현재가(ulong or float)"},
        '8': {'code': 8, 'name': "대비부호(char) > '1': 상한'2': 상승'3': 보합'4': 하한'5': 하락'6': 기세상한'7': 기세상승'8': 기세하한'9': 기세하락", 'is_char': True},
        '9': {'code': 9, 'name': "대비(long or float)"},
        '10': {'code': 10, 'name': "거래량(ulong or ulonglong)"},
        '11': {'code': 11, 'name': "매도호가(ulong or float)"},
        '12': {'code': 12, 'name': "매수호가(ulong or float)"},
        '13': {'code': 13, 'name': "시가(ulong or float)"},
        '14': {'code': 14, 'name': "고가(ulong or float)"},
        '15': {'code': 15, 'name': "저가(ulong or float)"},
        '16': {'code': 16, 'name': "거래대금(ulonglong)"},
        '17': {'code': 17, 'name': "종목상태(char) > '0': '정상','1': '투자위험','2': '관리','3': '거래정지','4': '불성실공시','5': '불성실공시&관리','6': '불성실공시&거래정지','7': '불성실공시&투자위험','8': '투자위험&거래정지','9': '관리&거래정지','A': '불성실공시&관리&거래정지','B': '불성실공시&투자위험&거래정지','C': '투자위험예고','D': '투자주의','E': '투자경고','F': '불성실공시&투자위험예고','G': '불성실공시&투자주의','H': '불성실공시&투자경고','I': '투자위험예고&거래정지','J': '투자주의&거래정지','K': '투자경고&거래정지','L': '불성실공시&투자위험예고&거래정지','M': '불성실공시&투자주의&거래정지','N': '불성실공시&투자경고&거래정지','Z': 'ETF종목'", 'is_char': True},
        '18': {'code': 18, 'name': "상장주식수(ulonglong)"},
        '19': {'code': 19, 'name': "자본금[백만원](ulong)"},
        '20': {'code': 20, 'name': "전일거래량(ulong or ulonglong)"},
        '21': {'code': 21, 'name': "최근갱신시간(ulong): hhmm"},
        '22': {'code': 22, 'name': "상한가(ulong or float)"},
        '23': {'code': 23, 'name': "하한가(ulong or float)"}
    }
    _STOCK_CHART_PARAMS = {
        '0': {'code': 0, 'name': ' 날짜(ulong)'},
        '1': {'code': 1, 'name': '시간(long) - hhmm'},
        '2': {'code': 2, 'name': '시가(long or float)'},
        '3': {'code': 3, 'name': '고가(long or float)'},
        '4': {'code': 4, 'name': '저가(long or float)'},
        '5': {'code': 5, 'name': '종가(long or float)'},
        '6': {'code': 6, 'name': '전일대비(long or float) - 주) 대비부호(37)과 반드시 같이 요청해야 함'},
        '7': {'is_char': False},
        '8': {'code': 8, 'name': '거래량(ulong or ulonglong) 주) 정밀도 만원 단위'},
        '9': {'code': 9, 'name': '거래대금(ulonglong)'},
        '10': {'code': 10, 'name': '누적체결매도수량(ulong or ulonglong) - 호가비교방식 누적체결매도수량 (분,틱 요청일 때만 제공)'},
        '11': {'code': 11, 'name': '누적체결매수수량(ulong or ulonglong) - 호가비교방식 누적체결매수수량 (분,틱 요청일 때만 제공)'},
        '12': {'code': 12, 'name': '상장주식수(ulonglong)'},
        '13': {'code': 13, 'name': '시가총액(ulonglong)'},
        '14': {'code': 14, 'name': '외국인주문한도수량(ulong)'},
        '15': {'code': 15, 'name': '외국인주문가능수량(ulong)'},
        '16': {'code': 16, 'name': '외국인현보유수량(ulong)'},
        '17': {'code': 17, 'name': '외국인현보유비율(float)'},
        '18': {'code': 18, 'name': '수정주가일자(ulong) - YYYYMMDD'},
        '19': {'code': 19, 'name': '수정주가비율(float)'},
        '20': {'code': 20, 'name': '기관순매수(long)'},
        '21': {'code': 21, 'name': '기관누적순매수(long)'},
        '22': {'code': 22, 'name': '등락주선(long)'},
        '23': {'code': 23, 'name': '등락비율(float)'},
        '24': {'code': 24, 'name': '예탁금(ulonglong)'},
        '25': {'code': 25, 'name': '주식회전율(float)'},
        '26': {'code': 26, 'name': '거래성립률(float)'},
        '37': {'code': 37, 'name': '대비부호(char) - 수신값은 GetHeaderValue 8 대비부호와 동일', 'is_char': True}
    }

    _DEFAULT_CHART_FIELD_OPTIONS = {
        '1': False,
        '5': (0, 1, 2, 3, 4, 5, 8),
        '6': 'D',
        '9': '1',
    }

    _DEFAULT_PER_EPS_OPTIONS = {
        '0': ()
    }

    @classmethod
    def get_df_options(cls, option_type, **kwargs):
        req_code = kwargs.get('1')
        assert req_code, 'No req_code error'
        if option_type == 'stock':
            assert req_code in ['1', '2'], 'req_code is either \'1\' or \'2\'.'
        else:
            assert len(req_code) > 0, 'Provide stock code for PER_EPS DataFrame'
        param_meta = cls._INPUT_VAL_PARAMS if option_type == 'stock' else cls._PER_EPS_INPUT_VAL_PARAMS
        dic = cls._DEFAULT_CHART_FIELD_OPTIONS.copy() \
            if option_type.lower() == 'stock' \
            else cls._DEFAULT_PER_EPS_OPTIONS.copy()
        if option_type == 'stock' and '5' in kwargs.keys():
            dic['5'] = dic['5'] + kwargs['5']
            kwargs.pop('5')
        elif option_type == 'per_eps' and '0' in kwargs.keys():
            dic['0'] = dic['0'] + kwargs['0']
            kwargs.pop('0')
        dic.update(kwargs)
        for k, v in dic.items():
            dic[k] = ord(v) if param_meta[k].get('is_char', False) else v
        return OrderedDict(sorted(dic.items(), key=lambda x: (int(x[0]), x[1])))
